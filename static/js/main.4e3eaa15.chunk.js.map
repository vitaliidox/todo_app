{"version":3,"sources":["types/Error.ts","components/ErrorNotification/ErrorNotification.tsx","utils/fetchClient.ts","types/Status.ts","api/todos.ts","components/Filters/Filters.tsx","components/Footer/Footer.tsx","api/users.ts","components/RegisterField/RegisterField.tsx","components/Auth/AuthForm.tsx","components/Auth/AuthContext.tsx","components/Header/Header.tsx","components/TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoApp/TodoApp.tsx","App.tsx","index.tsx"],"names":["Error","ErrorNotification","isError","setIsError","useEffect","timeout","setTimeout","clearTimeout","getErrorNotification","useMemo","Add","Delete","Update","Empty","onErrorClose","useCallback","data-cy","className","classNames","hidden","aria-label","type","onClick","BASE_URL","wait","delay","Promise","resolve","request","url","method","data","options","body","JSON","stringify","headers","then","fetch","response","ok","json","Status","client","postTodo","patchTodo","todoId","deleteTodo","Filters","filter","setFilter","onFilterChange","status","to","selected","All","Active","Completed","Footer","todos","setTodos","removeAllCompletedTodos","all","map","todo","a","completed","id","item","catch","numberOfLeftItems","number","forEach","some","getUserByEmail","email","users","createUser","name","RegisterField","loading","errorMessage","needToRegister","setName","htmlFor","placeholder","required","minLength","disabled","value","onChange","e","target","AuthForm","onLogin","useState","setEmail","setNeedToRegister","setLoading","setErrorMessage","saveUser","user","localStorage","setItem","userData","getItem","parse","error","loadUser","handleSubmit","event","preventDefault","onSubmit","AuthContext","React","createContext","AuthProvider","children","setUser","Provider","Header","query","setQuery","useContext","postTodosData","title","userId","prev","finally","TodoItem","isActiveField","setIsActiveField","filteredTodos","setTodosList","deleteTodosItem","onChangeTodosTitle","todosList","index","todosTitle","patchChangedTitle","leaveInput","editing","view","checked","getChangedTodos","completedTodo","indexOf","toggleTodo","onDoubleClick","autoFocus","onFocus","onKeyUp","code","key","onBlur","TodoList","TodoApp","isActiveToggleAll","setIsActiveToggleAll","locate","useLocation","toggleAllTodos","countCompleted","patchAllToggledTodos","isCompleted","promises","length","_","getFilteredTodos","every","location","pathname","includes","toLowerCase","setFiltersParam","App","Root","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.4e3eaa15.chunk.js","sourcesContent":["export enum Error {\n  Add = 'Add',\n  Delete = 'Delete',\n  Update = 'Update',\n  Empty = 'Empty',\n}\n","import {\n  useCallback,\n  useEffect,\n  useMemo,\n} from 'react';\nimport classNames from 'classnames';\nimport { Error } from '../../types/Error';\n\ntype Props = {\n  isError: Error | null,\n  setIsError: (arg: Error | null) => void,\n};\n\nexport const ErrorNotification: React.FC<Props> = ({ isError, setIsError }) => {\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsError(null);\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n      setIsError(null);\n    };\n  }, []);\n\n  const getErrorNotification = useMemo(() => {\n    switch (isError) {\n      case Error.Add:\n        return 'Unable to add a todo';\n      case Error.Delete:\n        return 'Unable to delete a todo';\n      case Error.Update:\n        return 'Unable to update a todo';\n      case Error.Empty:\n        return 'Title can\\'t be empty';\n      default:\n        return null;\n    }\n  }, [isError]);\n\n  const onErrorClose = useCallback(() => {\n    setIsError(null);\n  }, []);\n\n  return (\n    <div\n      data-cy=\"errorNotification\"\n      className={classNames(\n        ('errorNotification'),\n        { hidden: !isError },\n      )}\n    >\n      {getErrorNotification}\n      <button\n        aria-label=\"destroyButton\"\n        data-cy=\"deleteTodo\"\n        type=\"button\"\n        className=\"destroyButton\"\n        onClick={onErrorClose}\n      />\n    </div>\n  );\n};\n","const BASE_URL = 'https://mate.academy/students-api';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\ntype RequestMethod = 'GET' | 'POST' | 'PATCH' | 'DELETE';\n\nfunction request<T>(\n  url: string,\n  method: RequestMethod = 'GET',\n  data: any = null,\n): Promise<T> {\n  const options: RequestInit = { method };\n\n  if (data) {\n    options.body = JSON.stringify(data);\n    options.headers = {\n      'Content-Type': 'application/json; charset=UTF-8',\n    };\n  }\n\n  return wait(300)\n    .then(() => fetch(BASE_URL + url, options))\n    .then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n\n      return response.json();\n    });\n}\n\nexport const client = {\n  get: <T>(url: string) => request<T>(url),\n  post: <T>(url: string, data: any) => request<T>(url, 'POST', data),\n  patch: <T>(url: string, data: any) => request<T>(url, 'PATCH', data),\n  delete: (url: string) => request(url, 'DELETE'),\n};\n","export enum Status {\n  All = 'All',\n  Active = 'Active',\n  Completed = 'Completed',\n}\n","import { Todo } from '../types/Todo';\nimport { client } from '../utils/fetchClient';\n\nexport const getTodos = (userId: number) => {\n  return client.get<Todo[]>(`/todos?userId=${userId}`);\n};\n\nexport const postTodo = (data: Omit<Todo, 'id'>) => {\n  return client.post<Todo>('/todos', data);\n};\n\nexport const patchTodo = (todoId: number, data: Partial<Todo>) => {\n  return client.patch<Todo>(`/todos/${todoId}`, data);\n};\n\nexport const deleteTodo = (todoId: number) => {\n  return client.delete(`/todos/${todoId}`);\n};\n","import classNames from 'classnames';\nimport { useCallback } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Status } from '../../types/Status';\n\ntype Props = {\n  filter: Status,\n  setFilter: (arg: Status) => void,\n};\n\nexport const Filters: React.FC<Props> = ({ filter, setFilter }) => {\n  const onFilterChange = useCallback((status: Status) => () => {\n    setFilter(status);\n  }, []);\n\n  return (\n    <ul className=\"filters\">\n      <li>\n        <Link\n          to=\"/\"\n          className={classNames(\n            { selected: filter === Status.All },\n          )}\n          onClick={onFilterChange(Status.All)}\n        >\n          All\n        </Link>\n      </li>\n\n      <li>\n        <Link\n          to=\"/active\"\n          className={classNames(\n            { selected: filter === Status.Active },\n          )}\n          onClick={onFilterChange(Status.Active)}\n        >\n          Active\n        </Link>\n      </li>\n\n      <li>\n        <Link\n          to=\"/completed\"\n          className={classNames(\n            { selected: filter === Status.Completed },\n          )}\n          onClick={onFilterChange(Status.Completed)}\n        >\n          Completed\n        </Link>\n      </li>\n    </ul>\n  );\n};\n","import classNames from 'classnames';\nimport { useCallback, useMemo } from 'react';\nimport { deleteTodo } from '../../api/todos';\nimport { Error } from '../../types/Error';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\nimport { Filters } from '../Filters';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (arg: Todo[]) => void,\n  filter: Status,\n  setFilter: (arg: Status) => void,\n  setIsError: (arg: Error | null) => void,\n};\n\nexport const Footer: React.FC<Props> = ({\n  todos,\n  setTodos,\n  filter,\n  setFilter,\n  setIsError,\n}) => {\n  const checkCompletedTodos = () => {\n    return todos.some(todo => todo.completed);\n  };\n\n  const removeAllCompletedTodos = useCallback(() => {\n    if (!todos) {\n      return;\n    }\n\n    Promise.all(\n      todos.map(async (todo) => {\n        if (todo.completed) {\n          await deleteTodo(todo.id)\n            .then(() => setTodos(todos.filter(item => !item.completed)))\n            .catch(() => setIsError(Error.Delete));\n        }\n      }),\n    );\n  }, [todos]);\n\n  const numberOfLeftItems = useMemo(() => {\n    let number = 0;\n\n    todos.forEach((todo) => {\n      if (!todo.completed) {\n        number += 1;\n      }\n    });\n\n    return number;\n  }, [todos]);\n\n  return (\n    <footer className=\"footer\">\n      <span className=\"todo-count\" data-cy=\"todosCounter\">\n        {`${numberOfLeftItems} items left`}\n      </span>\n\n      <Filters\n        setFilter={setFilter}\n        filter={filter}\n      />\n\n      <button\n        type=\"button\"\n        className={classNames(\n          'clear-completed',\n          { 'clear-completed-hidden': !checkCompletedTodos() },\n        )}\n        onClick={removeAllCompletedTodos}\n      >\n        Clear completed\n      </button>\n    </footer>\n  );\n};\n","import { User } from '../types/User';\nimport { client } from '../utils/fetchClient';\n\nexport const getUserByEmail = async (email: string) => {\n  const users = await client.get<User[]>(`/users?email=${email}`);\n\n  return users[0] || null;\n};\n\ntype UserData = Pick<User, 'name' | 'email'>;\n\nexport const createUser = async ({ email, name }: UserData) => {\n  return client.post<User>('/users', { email, name });\n};\n","import classNames from 'classnames';\n\ntype Props = {\n  loading: boolean,\n  errorMessage: string,\n  needToRegister: boolean,\n  name: string,\n  setName: (e: string) => void,\n};\n\nexport const RegisterField: React.FC<Props> = ({\n  loading,\n  errorMessage,\n  needToRegister,\n  name,\n  setName,\n}) => {\n  return (\n    <div className=\"fieldRegister\">\n      <label className=\"fieldRegister__label\" htmlFor=\"user-name\">\n        Your Name\n      </label>\n      <input\n        type=\"text\"\n        id=\"user-name\"\n        className={classNames('authForm__input', {\n          'is-danger': needToRegister && errorMessage,\n        })}\n        placeholder=\"Enter your name\"\n        required\n        minLength={4}\n        disabled={loading}\n        value={name}\n        onChange={e => setName(e.target.value)}\n      />\n\n      {needToRegister && errorMessage && (\n        <p className=\"is-danger\">{errorMessage}</p>\n      )}\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React, { useEffect, useState } from 'react';\nimport { createUser, getUserByEmail } from '../../api/users';\nimport { User } from '../../types/User';\nimport { RegisterField } from '../RegisterField';\n\nexport type Props = {\n  onLogin: (user: User) => void,\n};\n\nexport const AuthForm: React.FC<Props> = ({ onLogin }) => {\n  const [email, setEmail] = useState('');\n  const [name, setName] = useState('');\n  const [needToRegister, setNeedToRegister] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const saveUser = (user: User) => {\n    localStorage.setItem('user', JSON.stringify(user));\n    onLogin(user);\n  };\n\n  useEffect(() => {\n    const userData = localStorage.getItem('user');\n\n    if (!userData) {\n      return;\n    }\n\n    try {\n      const user = JSON.parse(userData) as User;\n\n      onLogin(user);\n    } catch (error) {\n      throw new Error('Need to login');\n    }\n  }, []);\n\n  const loadUser = async () => {\n    const user = await getUserByEmail(email);\n\n    if (user) {\n      saveUser(user);\n    } else {\n      setNeedToRegister(true);\n    }\n  };\n\n  const registerUser = () => {\n    return createUser({ name, email })\n      .then(saveUser);\n  };\n\n  const handleSubmit = async (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setErrorMessage('');\n    setLoading(true);\n    try {\n      if (needToRegister) {\n        await registerUser();\n      } else {\n        await loadUser();\n      }\n    } catch (error) {\n      setErrorMessage('Something went wrtong');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"authForm\">\n      <h1 className=\"title-suthForm\">\n        {needToRegister ? 'You need to register' : 'Log in to open todos'}\n      </h1>\n\n      <div className=\"fieldRegister\">\n        <label className=\"fieldRegister__label\" htmlFor=\"user-email\">\n          Email\n        </label>\n        <input\n          type=\"email\"\n          id=\"user-email\"\n          className={classNames('authForm__input', {\n            'is-danger': needToRegister && errorMessage,\n          })}\n          placeholder=\"Enter your email\"\n          disabled={loading || needToRegister}\n          value={email}\n          required\n          onChange={e => setEmail(e.target.value)}\n        />\n        {needToRegister && errorMessage && (\n          <p className=\"is-danger\">{errorMessage}</p>\n        )}\n      </div>\n\n      {needToRegister && (\n        <RegisterField\n          loading={loading}\n          errorMessage={errorMessage}\n          needToRegister={needToRegister}\n          name={name}\n          setName={setName}\n        />\n      )}\n\n      <button\n        type=\"submit\"\n        className=\"submitAuthForm\"\n      >\n        {needToRegister ? 'Register' : 'Login'}\n      </button>\n    </form>\n  );\n};\n","import React, { useState } from 'react';\nimport { User } from '../../types/User';\nimport { AuthForm } from './AuthForm';\n\nexport const AuthContext = React.createContext<User | null>(null);\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nexport const AuthProvider: React.FC <Props> = ({ children }) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  if (!user) {\n    return <AuthForm onLogin={setUser} />;\n  }\n\n  return (\n    <AuthContext.Provider value={user}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n","import { FormEvent, useContext, useState } from 'react';\nimport { AuthContext } from '../Auth/AuthContext';\nimport { postTodo } from '../../api/todos';\n\nimport { Error } from '../../types/Error';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (arg: ((prev: Todo[]) => Todo[]) | Todo[]) => void,\n  setIsError: (arg: Error | null) => void,\n};\n\nexport const Header: React.FC<Props> = ({\n  setTodos,\n  setIsError,\n}) => {\n  const [query, setQuery] = useState('');\n  const user = useContext(AuthContext);\n\n  const postTodosData = async () => {\n    if (user && query) {\n      const data = {\n        title: query,\n        userId: user.id,\n        completed: false,\n      };\n\n      await postTodo(data)\n        .then(todo => {\n          setTodos((prev) => [...prev, todo]);\n        })\n        .catch(() => {\n          setIsError(Error.Add);\n        })\n        .finally(() => {\n          setQuery('');\n        });\n    }\n  };\n\n  const onSubmitHandler = (event: FormEvent) => {\n    event.preventDefault();\n    postTodosData();\n  };\n\n  return (\n    <header className=\"header\">\n      <h1 className=\"header__title\">\n        {`${user?.name}: todos`}\n      </h1>\n\n      <form onSubmit={onSubmitHandler}>\n        <input\n          type=\"text\"\n          data-cy=\"createTodo\"\n          className=\"new-todo\"\n          placeholder=\"What needs to be done?\"\n          value={query}\n          onChange={(event) => setQuery(event?.target.value)}\n        />\n      </form>\n    </header>\n  );\n};\n","import classNames from 'classnames';\nimport { useContext, useState } from 'react';\nimport { deleteTodo, patchTodo } from '../../api/todos';\nimport { Error } from '../../types/Error';\nimport { Todo } from '../../types/Todo';\nimport { AuthContext } from '../Auth/AuthContext';\n\ntype Props = {\n  todo: Todo,\n  todos: Todo[],\n  setTodos: (arg: Todo[]) => void,\n  isActiveField: number,\n  setIsActiveField: (arg: number) => void,\n  setIsError: (arg: Error | null) => void,\n  filteredTodos: Todo[] | null,\n  setTodosList: () => void | undefined,\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  todos,\n  setTodos,\n  isActiveField,\n  setIsActiveField,\n  setIsError,\n  filteredTodos,\n  setTodosList,\n}) => {\n  const [query, setQuery] = useState('');\n  const user = useContext(AuthContext);\n\n  const deleteTodosItem = async (todoId: number) => {\n    if (user) {\n      setIsError(null);\n      await deleteTodo(todoId)\n        .then(() => {\n          if (filteredTodos) {\n            setTodos(\n              filteredTodos\n                .filter((item: Todo) => item.id !== todoId),\n            );\n          }\n        })\n        .catch(() => setIsError(Error.Delete));\n    }\n  };\n\n  const toggleTodo = (completed = false) => {\n    if (user && filteredTodos) {\n      const data = {\n        completed,\n      };\n\n      const getChangedTodos = (completedTodo: boolean) => {\n        if (filteredTodos) {\n          const todosList = [...filteredTodos];\n\n          todosList[filteredTodos\n            .indexOf(todo)].completed = completedTodo;\n\n          return todosList;\n        }\n\n        return [];\n      };\n\n      patchTodo(todo.id, data)\n        .then(() => {\n          setTodos(getChangedTodos(completed));\n        })\n        .catch(() => {\n          setTodos(getChangedTodos(!completed));\n          setIsError(Error.Update);\n        });\n    }\n  };\n\n  const onChangeTodosTitle = () => {\n    if (user && filteredTodos) {\n      const todosList = [...todos];\n\n      if (todo.title === query) {\n        return;\n      }\n\n      if (!query) {\n        deleteTodosItem(todo.id);\n\n        return;\n      }\n\n      const patchChangedTitle = (index: number, todosTitle: string) => {\n        setIsError(null);\n        const data = {\n          completed: todo.completed,\n          title: todosTitle,\n        };\n\n        todosList[index].title = query;\n        setTodos(todosList);\n\n        return patchTodo(todo.id, data)\n          .then(() => {\n            todosList[index].title = query;\n\n            return todosList;\n          })\n          .catch(() => {\n            setTodosList();\n            setIsError(Error.Update);\n          });\n      };\n\n      filteredTodos.map((item, index) => {\n        if (todo.id === item.id) {\n          return patchChangedTitle(index, query);\n        }\n\n        return [];\n      });\n\n      setTodos(todosList);\n    }\n  };\n\n  const leaveInput = () => {\n    onChangeTodosTitle();\n    setIsActiveField(0);\n  };\n\n  const keyUpHandler = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.code === 'Escape') {\n      setQuery(todo.title);\n      setIsActiveField(0);\n    } else if (event.key === 'Enter') {\n      leaveInput();\n    }\n  };\n\n  return (\n    <li\n      className={classNames(\n        { editing: isActiveField === todo.id },\n        { completed: todo.completed },\n        { view: isActiveField !== todo.id },\n      )}\n    >\n      {isActiveField !== todo.id ? (\n        <div className=\"view\">\n          <input\n            checked={todo.completed}\n            type=\"checkbox\"\n            className=\"toggle\"\n            onClick={() => {\n              toggleTodo(!todo.completed);\n            }}\n          />\n          <label\n            onDoubleClick={() => setIsActiveField(todo.id)}\n          >\n            {todo.title}\n          </label>\n          <button\n            type=\"button\"\n            className=\"destroy\"\n            data-cy=\"deleteTodo\"\n            onClick={() => deleteTodosItem(todo.id)}\n            aria-label=\"delete\"\n          />\n        </div>\n      )\n        : (\n          <input\n            // eslint-disable-next-line jsx-a11y/no-autofocus\n            autoFocus\n            type=\"text\"\n            className=\"edit\"\n            onFocus={() => setQuery(todo.title)}\n            onChange={(event) => setQuery(event.target.value)}\n            value={query}\n            onKeyUp={keyUpHandler}\n            onBlur={leaveInput}\n          />\n        )}\n    </li>\n  );\n};\n","import { useState } from 'react';\nimport { Error } from '../../types/Error';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../TodoItem';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (arg: Todo[]) => void,\n  setTodosList: () => void | undefined,\n  filteredTodos: Todo[] | null,\n  setIsError: (arg: Error | null) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  setTodos,\n  setTodosList,\n  filteredTodos,\n  setIsError,\n}) => {\n  const [isActiveField, setIsActiveField] = useState<number>(0);\n\n  return (\n    <ul className=\"todo-list\" data-cy=\"todoList\">\n      {filteredTodos && filteredTodos.map((todo: Todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          isActiveField={isActiveField}\n          setIsActiveField={setIsActiveField}\n          setIsError={setIsError}\n          todos={todos}\n          setTodos={setTodos}\n          filteredTodos={filteredTodos}\n          setTodosList={setTodosList}\n        />\n      ))}\n    </ul>\n  );\n};\n","import {\n  useCallback,\n  useContext,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { getTodos, patchTodo } from '../../api/todos';\nimport { AuthContext } from '../Auth/AuthContext';\nimport { TodoList } from '../TodoList';\n\nimport { Error } from '../../types/Error';\nimport { Status } from '../../types/Status';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  setTodos: (arg: Todo[]) => void,\n  setIsError: (arg: Error | null) => void,\n  filter: Status,\n  setFilter: (arg: Status) => void,\n};\n\nexport const TodoApp: React.FC<Props> = ({\n  todos,\n  setTodos,\n  setIsError,\n  filter,\n  setFilter,\n}) => {\n  const [isActiveToggleAll, setIsActiveToggleAll] = useState(false);\n\n  const user = useContext(AuthContext);\n  const locate = useLocation();\n\n  const setTodosList = () => {\n    if (!user) {\n      return;\n    }\n\n    getTodos(user.id)\n      .then(data => setTodos(data))\n      .catch(() => {\n        setIsError(Error.Update);\n        setTodos([]);\n      });\n  };\n\n  const isAllTodosCompleted = () => todos.every((todo) => todo.completed);\n\n  const toggleAllTodos = useCallback(() => {\n    const todosList = [...todos];\n    let countCompleted = 0;\n\n    const patchAllToggledTodos = (index: number, isCompleted: boolean) => {\n      return patchTodo(todos[index].id, { completed: isCompleted })\n        .then(() => {\n          todosList[index].completed = isCompleted;\n\n          return todosList[index];\n        })\n        .catch(() => {\n          setIsError(Error.Update);\n        });\n    };\n\n    let promises = todos.map((todo, index) => {\n      if (!todo.completed) {\n        return patchAllToggledTodos(index, true);\n      }\n\n      countCompleted += 1;\n\n      return [];\n    });\n\n    if (countCompleted === todos.length) {\n      promises = todos.map((_, index) => {\n        return patchAllToggledTodos(index, false);\n      });\n    }\n\n    Promise.all(promises)\n      .then(() => {\n        setTodos(todosList);\n      });\n  }, [todos]);\n\n  const setFiltersParam = () => {\n    const location = locate.pathname;\n\n    switch (true) {\n      case location.includes(Status.Completed.toLowerCase()):\n        setFilter(Status.Completed);\n        break;\n      case location.includes(Status.Active.toLowerCase()):\n        setFilter(Status.Active);\n        break;\n      default:\n        setFilter(Status.All);\n    }\n  };\n\n  const getFilteredTodos = () => {\n    if (!todos || todos.length === 0) {\n      return null;\n    }\n\n    const todosList = [...todos];\n\n    if (filter === Status.All) {\n      return todosList;\n    }\n\n    return todosList.filter((todo) => {\n      switch (filter) {\n        case Status.Active: return !todo.completed;\n        case Status.Completed: return todo.completed;\n        default:\n          return true;\n      }\n    });\n  };\n\n  const filteredTodos = useMemo(() => getFilteredTodos(), [todos, filter]);\n\n  useEffect(() => {\n    Promise.all(\n      [isAllTodosCompleted()],\n    ).then(([value]) => setIsActiveToggleAll(value));\n  }, [todos]);\n\n  useEffect(() => {\n    setTodosList();\n    setFiltersParam();\n  }, [locate]);\n\n  return (\n    <section className=\"main\">\n      <input\n        checked={isActiveToggleAll}\n        type=\"checkbox\"\n        id=\"toggle-all\"\n        className=\"toggle-all\"\n        data-cy=\"toggleAll\"\n        onClick={toggleAllTodos}\n      />\n      <label htmlFor=\"toggle-all\">Mark all as complete</label>\n      <TodoList\n        filteredTodos={filteredTodos}\n        setIsError={setIsError}\n        todos={todos}\n        setTodos={setTodos}\n        setTodosList={setTodosList}\n      />\n    </section>\n  );\n};\n","import React, { useState } from 'react';\nimport { ErrorNotification } from './components/ErrorNotification';\nimport { Footer } from './components/Footer';\nimport { Header } from './components/Header';\nimport { TodoApp } from './components/TodoApp';\n\nimport { Error } from './types/Error';\nimport { Status } from './types/Status';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isError, setIsError] = useState<Error | null>(null);\n  const [filter, setFilter] = useState<Status>(Status.All);\n\n  return (\n    <>\n      <div className=\"todoapp\">\n        <Header\n          todos={todos}\n          setTodos={setTodos}\n          setIsError={setIsError}\n        />\n        {todos && (\n          <TodoApp\n            todos={todos}\n            setTodos={setTodos}\n            setIsError={setIsError}\n            filter={filter}\n            setFilter={setFilter}\n          />\n        )}\n        {todos.length > 0 && (\n          <Footer\n            todos={todos}\n            setTodos={setTodos}\n            setIsError={setIsError}\n            filter={filter}\n            setFilter={setFilter}\n          />\n        )}\n      </div>\n\n      {isError && (\n        <ErrorNotification\n          isError={isError}\n          setIsError={setIsError}\n        />\n      )}\n    </>\n  );\n};\n","import { createRoot } from 'react-dom/client';\n\nimport './styles/index.css';\nimport './styles/todo-list.css';\nimport './styles/filters.css';\nimport './styles/authForm.css';\nimport { HashRouter } from 'react-router-dom';\nimport { App } from './App';\nimport { AuthProvider } from './components/Auth/AuthContext';\n\nconst Root = () => (\n  <HashRouter>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </HashRouter>\n);\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(<Root />);\n"],"sourceRoot":""}